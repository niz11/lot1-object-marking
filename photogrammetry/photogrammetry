#!/bin/bash
# ------------------------------------------------------------------
# [Author] Anton Horeis
#          This script starts the photogrammetry pipeline inside a meshroom docker container
# ------------------------------------------------------------------

VERSION=0.3
SUBJECT=some-unique-id
USAGE="Usage: photogrammetry [options] input_folder_name [meshroom_graph]
      OPTIONS:
        v - show version
        h - show help
        u - set user id
        c - use image compression
"

# --- Options processing -------------------------------------------
if [ $# -lt 1 ] ; then
    printf "%s" "$USAGE"
    exit 1;
fi

while getopts ":i:vhcpu:" optname
  do
    case "$optname" in
      "v")
        echo "Version $VERSION"
        exit 0;
        ;;
      "i")
        echo "-i argument: $OPTARG"
        ;;
      "h")
        printf "%s" "$USAGE"
        exit 0;
        ;;
      "u")
        u_id=$OPTARG
      ;;
      "c")
        compression=1
      ;;
      "p")
        preview=1
      ;;
      "?")
        echo "Unknown option $OPTARG"
        exit 0;
        ;;
      ":")
        echo "No argument value for option $OPTARG"
        exit 0;
        ;;
      *)
        echo "Unknown error while processing options"
        exit 0;
        ;;
    esac
  done

shift $(($OPTIND - 1))

input=$1
model_name="$input"
graph=${2:-"standard.mg"}
u_id=${u_id:-"default_user"}

# --- Locks -------------------------------------------------------
LOCK_FILE=/tmp/$SUBJECT.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi

trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# --- Body --------------------------------------------------------
#  SCRIPT LOGIC GOES HERE

if [ ! -f /data/log/meshroom_log ]; then
    touch /data/log/meshroom_log
fi
if [ ! -d /data/model/"$u_id"/"$model_name" ]; then
    mkdir -p /data/model/"$u_id"/"$model_name"
fi
if [ ! -f /data/log/obj2gltf_log ]; then
    touch /data/log/obj2gltf_log
fi
if [ ! -f /data/log/magick_log ]; then
    touch /data/log/magick_log
fi

#image compression
if [ "$compression" = "1" ]; then
  echo "STARTING IMAGE COMPRESSION___________"
  if [ ! -d /data/img_in/"$u_id"/"$input"/compressed ]; then
    mkdir /data/img_in/"$u_id"/"$input"/compressed/
  fi
  printf '%s \n %s\n' "$(date)" "starting image compression" >> /data/log/img-compression_log
  mogrify -path /data/img_in/"$u_id"/"$input"/compressed/ -strip -interlace Plane -gaussian-blur 0.05 -quality 85% /data/img_in/"$u_id"/"$input"/* | tee -a /data/log/img-compression_log
  input="${input}/compressed"
  echo "FINISHED IMAGE COMPRESSION___________"
fi

# meshroom pipeline
echo "STARTING MESHROOM COMPUTATION________"

if [ "$preview" = "1" ]; then
  printf '%s \n %s\n' "$(date)" "starting model preview computation" >> /data/log/meshroom_log
  if [ ! -d /data/model/"$u_id"/"$model_name"/preview ]; then
    mkdir /data/model/"$u_id"/"$model_name"/preview
fi
  /opt/Meshroom/meshroom_batch --input /data/img_in/"$u_id"/"$input" --output /data/model/"$u_id"/"$model_name"/preview -p /data/graph/preview.mg --cache /data/cache | tee -a /data/log/meshroom_log
fi

printf '%s \n %s\n' "$(date)" "starting meshroom computation" >> /data/log/meshroom_log
/opt/Meshroom/meshroom_batch --input /data/img_in/"$u_id"/"$input" --output /data/model/"$u_id"/"$model_name"/ -p /data/graph/"$graph" --cache /data/cache | tee -a /data/log/meshroom_log
echo "FINISHED MESHROOM COMPUTATION________"

# model conversion
if [ -f /data/model/"$input"/texturedMesh.obj ] ; then
  echo "STARTING MODEL CONVERSION___________"
  printf '%s \n %s\n' "$(date)" "starting conversion" >> /data/log/obj2gltf_log
  obj2gltf -b -i /data/model/"$u_id"/"$input"/texturedMesh.obj -o /data/model/"$u_id"/"$input"/model.glb | tee -a obj2gltf_output
else
  >&2 echo "Error: Couldn't find 3D Model. Probably, Meshroom failed while calculating the model. Check if enough ressources are available. Check Meshroom log."
fi


# -----------------------------------------------------------------
